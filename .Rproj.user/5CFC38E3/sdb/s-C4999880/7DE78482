{
    "contents" : "# This script generates spatialLinesDataFrames (joining speed and geo data) as layers for use in mapping\n# Uses different levels of aggregation\n# Saves files, all identified by time, to separate subfolder; each subfolder contains files for that level of agg\n# This script runs one for() loop for each agg level\n\n# Addition 10/29/15 - also now compiles a single summary df for use in graphing\n# And generates a single vector to set a unified coloring scheme\n\n# Useful description of how to reference SP lists\n# http://r.789695.n4.nabble.com/Retrieving-Vertices-Coordinates-from-SpatialPolygons-td881739.html\n\n###########################################################################################\n# Everything here required for all four loops\n###########################################################################################\n\nlibrary(sp)\nlibrary(plyr)\n\n\n\nload(\"/home/awc/Traffic_1/ptl.RDA\")\nload(\"/home/awc/Traffic_1/obs_com.RDA\")\n\n# Take unique ids from existing SpatialLines object (ptl)\n\nids <- data.frame()\nfor (j in (1:length(ptl))) {\n  id <- data.frame(ptl@lines[[j]]@ID)\n  ids <- rbind(ids, id)\n}\ncolnames(ids)[1] <- \"linkId\"\n\nrm(id, j)\n\n###########################################################################################\n# Everything above this line is required for all four loops\n###########################################################################################\n\n# Generate most granular agg files - one per time observation; saved to sldf_straight\n# Files named for the unix time of their observation\n# Files not aggregated at all - this is raw\n\n# First figure out which times have enough observations to be useful to map\n\ntimes <- aggregate(Speed~rndtm, data=data, length)\ntimesub <- times[times$Speed > 120,]\nrm(times)\n\nfor (i in 1:length(timesub[,1])) {\n  \n  tm_sb <- data[data$rndtm==paste0(timesub[i,1]),]\n  tm_sb_tn <- data.frame(tm_sb[,c(2,4)])\n  colnames(tm_sb_tn) <- c(\"linkId\",\"speed\")\n  \n  # There are some cases where linkId*time pairs have duplicate speed observations\n  # Caused by inaccuracy in the camera sampling, I believe\n  # The below aggregates for time to come to a single observation for each linkId*time pair\n  \n  speed_full <- join(ids, tm_sb_tn)\n  speed_full[is.na(speed_full$speed),2] <- 0\n  speed_full_unq <- aggregate(speed~linkId, data=speed_full, mean)\n  speed_full_short <- data.frame(speed_full_unq[,c(-1)])\n  row.names(speed_full_short) <- speed_full_unq$linkId\n  splndf <- SpatialLinesDataFrame(ptl, data = speed_full_short, match.ID = T)\n  \n  fnm <- paste0(\"/home/awc/Traffic_1/sldf_straight/splndf_\",as.numeric(timesub[i,1]),\".RDA\",sep=\"\")\n  save(splndf, file=fnm)\n  \n  #build a thing that'll cache a city-wide speed average by time; write to disk\n  \n  colnames(speed_full_short) <- \"speed\"\n  speed_full_short[speed_full_short$speed==0,1] <- NA\n  speed_avg <- data.frame(time = as.numeric(timesub[i,1]),\n                          avg_spd = mean(speed_full_short[,1], na.rm = T))\n  \n  if(exists(\"speed_trailer_straight\")==F) {\n    speed_trailer_straight <- speed_avg } else {\n      speed_trailer_straight <- rbind(speed_trailer_straight, speed_avg)\n      }\n  \n  rm(speed_full, speed_full_short, speed_avg, tm_sb, tm_sb_tn, speed_full_unq)\n  \n}\n\nspd_trl_fnm <- paste0(\"/home/awc/Traffic_1/sldf_straight/speed_trailer_straight.RDA\",sep=\"\")\nsave(speed_trailer_straight, file=spd_trl_fnm)\n\nrm(timesub, i, splndf, fnm, spd_trl_fnm, speed_trailer_straight)\n\n###########################################################################################\n# Generate agg files for all days of week\n# First generate an aggregated version of 'data' object, for linkId*time across days\n\ndata2 <- data\ndata2$time <- as.numeric(strftime(data2$rndtm, format = \"%H%M\"))\ndata_agg_full <- aggregate(Speed~linkId+time, data=data2, mean)\n\ntimes2 <- aggregate(Speed~time, data=data2, length)\ntimesub2 <- times2[times2$Speed > 120,]\nrm(times2, data2)\n\nfor (k in 1:length(timesub2[,1])) {\n  \n  tm_sb2 <- data_agg_full[data_agg_full$time==paste0(timesub2[k,1]),]\n  tm_sb_tn2 <- data.frame(tm_sb2[,c(1,3)])\n  colnames(tm_sb_tn2) <- c(\"linkId\",\"speed\")\n  \n  speed_full2 <- join(ids, tm_sb_tn2)\n  speed_full2[is.na(speed_full2$speed),2] <- 0\n  speed_full_unq2 <- aggregate(speed~linkId, data=speed_full2, mean)\n  speed_full_short2 <- data.frame(speed_full_unq2[,c(-1)])\n  row.names(speed_full_short2) <- speed_full_unq2$linkId\n  splndf <- SpatialLinesDataFrame(ptl, data = speed_full_short2, match.ID = T)\n  \n  fnm2 <- paste0(\"/home/awc/Traffic_1/sldf_agg_full/splndf_\",as.numeric(timesub2[k,1]),\".RDA\",sep=\"\")\n  save(splndf, file=fnm2)\n\n  # outputting thing to save speed over time\n  \n  colnames(speed_full_short2) <- \"speed\"\n  speed_full_short2[speed_full_short2$speed==0,1] <- NA\n  speed_avg2 <- data.frame(time = as.numeric(timesub2[k,1]),\n                           avg_spd = mean(speed_full_short2[,1], na.rm = T))\n  \n  if(exists(\"speed_trailer_full\")==F) {\n    speed_trailer_full <- speed_avg2 } else {\n      speed_trailer_full <- rbind(speed_trailer_full, speed_avg2)\n    }\n  \n  rm(speed_full2, speed_avg2, speed_full_short2, tm_sb2, tm_sb_tn2, speed_full_unq2, fnm2)\n  \n}\n\nspd_trl_fnm2 <- paste0(\"/home/awc/Traffic_1/speed_trailer_full.RDA\",sep=\"\")\nsave(speed_trailer_full, file=spd_trl_fnm2)\n\nrm(data_agg_full, timesub2, k, speed_trailer_full, splndf, spd_trl_fnm2)\n\n###########################################################################################\n# Generate agg files for weekdays (M-F)\n# First remove all observations that occurred on weekends\n# Also creates a flag that can be used below, for weekends\n\ndata3 <- data\ndata3$time <- as.numeric(strftime(data3$rndtm, format = \"%H%M\"))\ndata3$dow <- as.numeric(strftime(data3$rndtm, format = \"%w\"))+1\ndata3$wkdy_flg <- ifelse(data3$dow>=2 & data3$dow<=6, 1, 0)\ndata_agg_wkdy <- aggregate(Speed~linkId+time, data=data3[data3$wkdy_flg==1,], mean)\n\ntimes3 <- aggregate(Speed~time, data=data_agg_wkdy, length)\ntimesub3 <- times3[times3$Speed > 120,]\nrm(times3, data3)\n\nfor (l in 1:length(timesub3[,1])) {\n  \n  tm_sb3 <- data_agg_wkdy[data_agg_wkdy$time==paste0(timesub3[l,1]),]\n  tm_sb_tn3 <- data.frame(tm_sb3[,c(1,3)])\n  colnames(tm_sb_tn3) <- c(\"linkId\",\"speed\")\n  \n  speed_full3 <- join(ids, tm_sb_tn3)\n  speed_full3[is.na(speed_full3$speed),2] <- 0\n  speed_full_unq3 <- aggregate(speed~linkId, data=speed_full3, mean)\n  speed_full_short3 <- data.frame(speed_full_unq3[,c(-1)])\n  row.names(speed_full_short3) <- speed_full_unq3$linkId\n  splndf <- SpatialLinesDataFrame(ptl, data = speed_full_short3, match.ID = T)\n  \n  fnm3 <- paste0(\"/home/awc/Traffic_1/sldf_agg_wkdy/splndf_\",as.numeric(timesub3[l,1]),\".RDA\",sep=\"\")\n  save(splndf, file=fnm3)\n  \n  # outputting thing to save speed over time\n  \n  colnames(speed_full_short3) <- \"speed\"\n  speed_full_short3[speed_full_short3$speed==0,1] <- NA\n  speed_avg3 <- data.frame(time = as.numeric(timesub3[l,1]),\n                           avg_spd = mean(speed_full_short3[,1], na.rm = T))\n  \n  if(exists(\"speed_trailer_wkdy\")==F) {\n    speed_trailer_wkdy <- speed_avg3 } else {\n      speed_trailer_wkdy <- rbind(speed_trailer_wkdy, speed_avg3)\n    }\n  \n  rm(speed_full3, speed_full_short3, speed_avg3, tm_sb3, tm_sb_tn3, speed_full_unq3, fnm3)\n  \n}\n\nspd_trl_fnm3 <- paste0(\"/home/awc/Traffic_1/speed_trailer_wkdy.RDA\",sep=\"\")\nsave(speed_trailer_wkdy, file=spd_trl_fnm3)\n\nrm(data_agg_wkdy, speed_trailer_wkdy, timesub3, l, splndf, spd_trl_fnm3)\n\n###########################################################################################\n# Generate agg files for weekends (S+S)\n# Uses same method as above, simply reversing the record ID logic (yes/no weekday)\n\ndata3 <- data\ndata3$time <- as.numeric(strftime(data3$rndtm, format = \"%H%M\"))\ndata3$dow <- as.numeric(strftime(data3$rndtm, format = \"%w\"))+1\ndata3$wkdy_flg <- ifelse(data3$dow>=2 & data3$dow<=6, 0, 1)\ndata_agg_wkdy <- aggregate(Speed~linkId+time, data=data3[data3$wkdy_flg==1,], mean)\n\ntimes3 <- aggregate(Speed~time, data=data_agg_wkdy, length)\ntimesub3 <- times3[times3$Speed > 120,]\nrm(times3, data3)\n\nfor (m in 1:length(timesub3[,1])) {\n  \n  tm_sb3 <- data_agg_wkdy[data_agg_wkdy$time==paste0(timesub3[m,1]),]\n  tm_sb_tn3 <- data.frame(tm_sb3[,c(1,3)])\n  colnames(tm_sb_tn3) <- c(\"linkId\",\"speed\")\n  \n  speed_full3 <- join(ids, tm_sb_tn3)\n  speed_full3[is.na(speed_full3$speed),2] <- 0\n  speed_full_unq3 <- aggregate(speed~linkId, data=speed_full3, mean)\n  speed_full_short3 <- data.frame(speed_full_unq3[,c(-1)])\n  row.names(speed_full_short3) <- speed_full_unq3$linkId\n  splndf <- SpatialLinesDataFrame(ptl, data = speed_full_short3, match.ID = T)\n  \n  fnm3 <- paste0(\"/home/awc/Traffic_1/sldf_agg_wknd/splndf_\",as.numeric(timesub3[m,1]),\".RDA\",sep=\"\")\n  save(splndf, file=fnm3)\n\n  # outputting thing to save speed over time\n  \n  colnames(speed_full_short3) <- \"speed\"\n  speed_full_short3[speed_full_short3$speed==0,1] <- NA\n  speed_avg3 <- data.frame(time = as.numeric(timesub3[m,1]),\n                           avg_spd = mean(speed_full_short3[,1], na.rm = T))\n  \n  if(exists(\"speed_trailer_wknd\")==F) {\n    speed_trailer_wknd <- speed_avg3 } else {\n      speed_trailer_wknd <- rbind(speed_trailer_wknd, speed_avg3)\n    }\n  \n  rm(speed_full3, speed_full_short3, speed_avg3, tm_sb3, tm_sb_tn3, speed_full_unq3, fnm3)\n  \n}\n\nspd_trl_fnm3 <- paste0(\"/home/awc/Traffic_1/speed_trailer_wknd.RDA\",sep=\"\")\nsave(speed_trailer_wknd, file=spd_trl_fnm3)\n\nrm(list=ls())\n\n##################################################\n# Imported from old file 'graphing.R'\n# Prepares speed rollups for graphing in ggplot\n\nload(\"/home/awc/Traffic_1/speed_trailer_full.RDA\")\nload(\"/home/awc/Traffic_1/speed_trailer_wkdy.RDA\")\nload(\"/home/awc/Traffic_1/speed_trailer_wknd.RDA\")\n\nspeed_trailer_full$id <- \"All\"\nspeed_trailer_wkdy$id <- \"Wkdys\"\nspeed_trailer_wknd$id <- \"Wknds\"\n\navg_speed <- rbind(speed_trailer_full, \n                   speed_trailer_wkdy,\n                   speed_trailer_wknd)\n\nrm(speed_trailer_full,\n   speed_trailer_wkdy,\n   speed_trailer_wknd)\n\ncolnames(avg_speed)[3] <- \"Period\"\n\nsave(avg_speed, file=\"/home/awc/Traffic_1/avg_speeds.RDA\")\n",
    "created" : 1446748679873.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1523741119",
    "id" : "7DE78482",
    "lastKnownWriteTime" : 1446748811,
    "path" : "~/Traffic_1/_mapping.R",
    "project_path" : "_mapping.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}